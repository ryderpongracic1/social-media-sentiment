version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: sentiment-postgres
    environment:
      POSTGRES_DB: sentiment_analysis_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sentiment-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sentiment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sentiment-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET API
  api:
    build:
      context: .
      dockerfile: SentimentAnalysis.API/Dockerfile
    container_name: sentiment-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - DB_HOST=postgres
      - DB_NAME=sentiment_analysis_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - REDIS_CONNECTION_STRING=redis:6379
      - FRONTEND_DOMAIN=localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sentiment-network
    volumes:
      - ./SentimentAnalysis.API/Models:/app/Models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sentiment-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sentiment.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - sentiment-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: sentiment-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - sentiment-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  sentiment-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16